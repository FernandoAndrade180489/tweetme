{"version":3,"sources":["logo.svg","lookup/components.js","tweets/lookup.js","tweets/buttons.js","tweets/create.js","profiles/components.js","profiles/utils.js","profiles/badge.js","profiles/lookup.js","tweets/detail.js","tweets/feed.js","tweets/list.js","tweets/components.js","App.js","reportWebVitals.js","index.js"],"names":["backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","responseType","open","setRequestHeader","onload","status","response","detail","window","location","href","indexOf","onerror","e","console","log","message","send","apiTweetFeed","nextUrl","undefined","replace","apiTweetList","username","ActionBtn","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","handleActionBackendEvent","type","onClick","event","preventDefault","tweetId","id","apiTweetAction","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendUpdate","alert","onSubmit","newVal","current","value","content","ref","required","UserLink","children","UserDisplay","user","includeFullName","hideLink","nameDisplay","first_name","last_name","Fragment","UserPicture","userIdSpan","DisplayCount","numeral","format","ProfileBadge","didFollowToggle","profileLoading","currentVerb","is_following","follower_count","following_count","bio","ProfileBadgeComponent","useState","didLookup","setDidLookup","profile","setProfile","setProfileLoading","handleBackendLookup","useEffect","apiProfileDetail","actionVerb","toLowerCase","apiProfileFollowToggle","ParentTweet","parent","Tweet","isRetweet","retweeter","hideActions","didRetweet","actionTweet","setActionTweet","match","pathname","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","FeedList","tweetsInit","setTweetsInit","tweets","setTweets","setNextUrl","tweetsDidSet","setTweetsDidSet","final","newTweets","concat","next","results","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index","TweetsList","TweetsComponent","setNewTweets","canTweet","tempNewTweets","TweetDetailComponent","setTweet","apiTweetDetail","App","src","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","appEl","getElementById","ReactDOM","render","createElement","tweetsEl","dataset","tweetsFeedEl","querySelectorAll","forEach","container"],"mappings":"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","file":"static/js/main.9272248d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","// FOR CSRF Token when send POST\r\n// https://docs.djangoproject.com/en/2.2/ref/csrf/\r\nfunction getCookie(name) {\r\n  var cookieValue = null;\r\n  if (document.cookie && document.cookie !== \"\") {\r\n    var cookies = document.cookie.split(\";\");\r\n    for (var i = 0; i < cookies.length; i++) {\r\n      var cookie = cookies[i].trim();\r\n      // Does this cookie string begin with the name we want?\r\n      if (cookie.substring(0, name.length + 1) === name + \"=\") {\r\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\nexport function backendLookup(method, endpoint, callback, data) {\r\n  let jsonData;\r\n  if (data) {\r\n    jsonData = JSON.stringify(data);\r\n  }\r\n  const xhr = new XMLHttpRequest(); // xhr = SomeClass() -> equivalent in Python\r\n  const url = `http://localhost:8000/api${endpoint}`;\r\n  const csrftoken = getCookie(\"csrftoken\"); // For csrf Token from function getCookie()\r\n  xhr.responseType = \"json\";\r\n  xhr.open(method, url);\r\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\");\r\n  \r\n  // console.log(csrftoken)\r\n\r\n  if (csrftoken) {\r\n  //  xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\")\r\n    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")\r\n    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken) // JWT token\r\n  }\r\n\r\n  xhr.onload = function () {\r\n    if (xhr.status === 403) {\r\n      const detail = xhr.response.detail\r\n      if (detail === \"Authentication credentials were not provided.\"){\r\n        if (window.location.href.indexOf(\"login\") === -1) {\r\n          window.location.href = \"/login?showLoginRequired=true\"\r\n        }\r\n      }\r\n    }\r\n    callback(xhr.response, xhr.status);\r\n  };\r\n  xhr.onerror = function (e) {\r\n    console.log(\"error\", e);\r\n    callback({ message: \"The request was an error\" }, 400);\r\n  };\r\n  // console.log(jsonData)\r\n  xhr.send(jsonData);\r\n}","import { backendLookup } from \"../lookup\";\r\n\r\n\r\nexport function apiTweetCreate(newTweet, callback) {\r\n    backendLookup(\"POST\", \"/tweets/create/\", callback, { content: newTweet });\r\n}\r\n\r\nexport function apiTweetAction(tweetId, action, callback) {\r\n    const data = {id: tweetId, action: action}\r\n    backendLookup(\"POST\", \"/tweets/action/\", callback, data);\r\n}\r\n\r\nexport function apiTweetDetail(tweetId, callback) {\r\n    backendLookup(\"GET\", `/tweets/${tweetId}/`, callback);\r\n}\r\n\r\nexport function apiTweetFeed(callback, nextUrl) {\r\n    let endpoint = \"/tweets/feed/\"\r\n    if (nextUrl !== null && nextUrl !== undefined) {\r\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\r\n    }\r\n    backendLookup(\"GET\", endpoint, callback);\r\n}\r\n\r\nexport function apiTweetList(username, callback, nextUrl) {\r\n    let endpoint = \"/tweets/\"\r\n    if (username) {\r\n        endpoint = `/tweets/?username=${username}`\r\n    }\r\n    if (nextUrl !== null && nextUrl !== undefined) {\r\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\r\n    }\r\n    backendLookup(\"GET\", endpoint, callback);\r\n}\r\n","import React from \"react\";\r\n\r\nimport {apiTweetAction} from \"./lookup\";\r\n\r\nexport function ActionBtn(props) {\r\n    const { tweet, action, didPerformAction } = props;\r\n    const likes = tweet.likes ? tweet.likes : 0\r\n    const className = props.className ? props.className : \"btn btn-primary btn-sm\";\r\n    const actionDisplay = action.display ? action.display : \"Action\";\r\n  \r\n    const handleActionBackendEvent = (response, status) => {\r\n      // backend api response handler\r\n      console.log(response, status)\r\n      if ((status === 200 || status === 201) && didPerformAction) {\r\n        didPerformAction(response, status)\r\n      }\r\n    }\r\n  \r\n    const handleClick = (event) => {\r\n      event.preventDefault();\r\n      // backend api request\r\n      apiTweetAction(tweet.id, action.type, handleActionBackendEvent)    \r\n    };\r\n  \r\n    const display = action.type === \"like\" ? `${likes} ${actionDisplay}` : actionDisplay;\r\n    return (\r\n      <button className={className} onClick={handleClick}>\r\n        {display}\r\n      </button>\r\n    );\r\n  }","import React from \"react\";\r\n\r\nimport { apiTweetCreate } from \"./lookup\";\r\n\r\nexport function TweetCreate(props) {\r\n  const textAreaRef = React.createRef();\r\n  const {didTweet} = props\r\n  const handleBackendUpdate = (response, status) => {\r\n    console.log(response, status)\r\n    if (status === 201) {\r\n      didTweet(response);\r\n    } else {\r\n      console.log(response);\r\n      alert(\"An error occured, please try again\");\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    // console.log(event);\r\n    const newVal = textAreaRef.current.value;\r\n    console.log('new value', newVal)\r\n    \r\n    // backend api request\r\n    apiTweetCreate(newVal, handleBackendUpdate);    \r\n    textAreaRef.current.value = \"\";\r\n  };\r\n  \r\n  return (\r\n      <div className={props.className}>\r\n        <form onSubmit={handleSubmit}>\r\n          <textarea\r\n            ref={textAreaRef}\r\n            required={true}\r\n            className=\"form-control\"\r\n          ></textarea>\r\n          <button type=\"submit\" className=\"btn btn-primary my-3\">\r\n            Tweet\r\n          </button>\r\n        </form>\r\n      </div>\r\n  );\r\n}","import React from \"react\";\r\n\r\nexport function UserLink (props) {\r\n  const {username} = props\r\n\r\n  const handleUserLink = (event) => {\r\n    window.location.href = `/profile/${username}`\r\n  }\r\n  return <span className='pointer' onClick={handleUserLink}>\r\n    {props.children}\r\n  </span>\r\n}\r\n\r\nexport function UserDisplay(props) {\r\n  const {user, includeFullName, hideLink} = props\r\n  const nameDisplay = includeFullName === true ? `${user.first_name} ${user.last_name} ` : null;\r\n\r\n  return <React.Fragment>\r\n    {nameDisplay}\r\n    {hideLink === true ? `@${user.username}` : <UserLink username={user.username}>@{user.username}</UserLink>}\r\n  </React.Fragment>\r\n}\r\n\r\nexport function UserPicture (props) {\r\n  const {user, hideLink} = props\r\n  const userIdSpan = (<span className=\"mx-1 px-3 py-2 rounded-circle bg-dark text-white\">\r\n    {user.username[0]}\r\n  </span>);\r\n  return (\r\n    hideLink === true ? userIdSpan : <UserLink username={user.username}>\r\n      {userIdSpan}\r\n    </UserLink>\r\n  );\r\n}","import React from 'react';\r\nimport numeral from 'numeral';\r\n\r\nexport function DisplayCount(props) {\r\n    return <span className={props.className}>{numeral(props.children).format(\"0a\")}</span>\r\n}","import React, {useState, useEffect} from 'react';\r\n\r\nimport {UserDisplay, UserPicture} from './components'\r\nimport {apiProfileDetail, apiProfileFollowToggle} from './lookup';\r\n\r\nimport {DisplayCount} from './utils'\r\n\r\nfunction ProfileBadge(props) {\r\n    const {user, didFollowToggle, profileLoading} = props\r\n    let currentVerb = (user && user.is_following) ? \"Unfollow\" : \"Follow\"\r\n    currentVerb = profileLoading ? \"Loading...\" : currentVerb\r\n    const handleFollowToggle = (event) => {\r\n        event.preventDefault()\r\n        if (didFollowToggle && !profileLoading) {\r\n            didFollowToggle(currentVerb)\r\n        }\r\n    }\r\n\r\n    return user ? <div>\r\n        <UserPicture user={user} hideLink />\r\n        <p><UserDisplay user={user} includeFullName hideLink /></p>\r\n        <p><DisplayCount>{user.follower_count}</DisplayCount>{user.follower_count === 1 ? \" follower\" : \" followers\"}</p>\r\n        <p><DisplayCount>{user.following_count}</DisplayCount> following</p>\r\n        <p>{user.location}</p>\r\n        <p>{user.bio}</p>\r\n        <button className='btn btn-primary' onClick={handleFollowToggle}>{currentVerb}</button>\r\n    </div> : null\r\n}\r\n\r\nexport function ProfileBadgeComponent (props) {\r\n    const {username} = props\r\n    // lookup\r\n    const [didLookup, setDidLookup] = useState(false)\r\n    const [profile, setProfile] = useState(null)\r\n    const [profileLoading, setProfileLoading] = useState(false)\r\n    const handleBackendLookup = (response, status) => {\r\n        if (status === 200) {\r\n            setProfile(response)\r\n        } \r\n      }\r\n    \r\n    useEffect(() => {\r\n    if (didLookup === false) {\r\n        apiProfileDetail(username, handleBackendLookup)\r\n        setDidLookup(true)\r\n    }\r\n    }, [username, didLookup, setDidLookup])\r\n\r\n    const handleNewFollow = (actionVerb) => {\r\n        // console.log(actionVerb)\r\n        setProfileLoading(true)\r\n        apiProfileFollowToggle(username, actionVerb, (response, status) => {\r\n            console.log(response, status)\r\n            if (status===200) {\r\n                setProfile(response)\r\n                // apiProfileDetail(username, handleBackendLookup)\r\n            }\r\n            setProfileLoading(false)\r\n        })\r\n\r\n    }\r\n\r\n    return didLookup ===  false ? \"Loading...\" : profile ? <ProfileBadge user={profile} didFollowToggle={handleNewFollow} profileLoading={profileLoading} /> : null\r\n}\r\n","import { backendLookup } from \"../lookup\";\r\n\r\nexport function apiProfileDetail(username, callback) {\r\n    backendLookup(\"GET\", `/profiles/${username}/`, callback);\r\n}\r\n\r\nexport function apiProfileFollowToggle(username, action, callback) {\r\n    const data = {action: `${action && action}`.toLowerCase()}\r\n    backendLookup(\"POST\", `/profiles/${username}/follow/`, callback, data);\r\n}","import React, { useState } from \"react\";\r\n\r\nimport { ActionBtn } from \"./buttons\";\r\n\r\nimport { UserDisplay, UserPicture } from \"../profiles\"\r\n\r\nexport function ParentTweet(props) {\r\n    const {tweet} = props;\r\n    return (\r\n      tweet.parent ? <Tweet isRetweet retweeter={props.retweeter} hideActions className={' '} tweet={tweet.parent} /> : null);\r\n  }\r\n  \r\n  export function Tweet(props) {\r\n    const { tweet, didRetweet, hideActions, isRetweet, retweeter } = props;\r\n    const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null)\r\n    let className = props.className\r\n      ? props.className\r\n      : \"col-10 mx-auto col-md-6\";\r\n    className = isRetweet === true ? `${className} p-2 border rounded` : className;\r\n    const action = { type: \"like\", display: \"Likes\" };\r\n\r\n    const path = window.location.pathname\r\n    const match = path.match(/(?<tweetid>\\d+)/)      \r\n    const urlTweetId = match ? match.groups.tweetid : -1\r\n    \r\n    const isDetail = `${tweet.id}` === `${urlTweetId}`\r\n    \r\n    const handleLink = (event) => {\r\n      event.preventDefault();\r\n      window.location.href = `/${tweet.id}`\r\n    }\r\n  \r\n    const handlePerformAction = (newActionTweet, status) => {\r\n      if (status === 200) {\r\n        setActionTweet(newActionTweet)\r\n      } else if (status === 201) {\r\n        if (didRetweet) {\r\n          didRetweet(newActionTweet)\r\n        }\r\n      }\r\n    }\r\n    \r\n    \r\n    return (\r\n      <div className={className}>\r\n        {isRetweet === true && <div className=\"mb-2\">\r\n          <span className=\"small text-muted\">Retweet via <UserDisplay user={retweeter} /></span>\r\n        </div> }\r\n        <div className=\"d-flex\">\r\n          <div className=\"\">\r\n            <UserPicture user={tweet.user} />\r\n          </div>\r\n          <div className=\"col-11\">\r\n            <div>            \r\n              <p>\r\n                <UserDisplay includeFullName user={tweet.user} />\r\n              </p>\r\n              <p>{tweet.content}</p>\r\n              <ParentTweet tweet={tweet} retweeter={tweet.user} />               \r\n            </div>\r\n            <div className=\"btn btn-group px-0\">\r\n              {(actionTweet && hideActions !== true) && <React.Fragment>\r\n                  <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={action} />\r\n                  <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{ type: \"unlike\", display: \"Unlike\" }}/>\r\n                  <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{ type: \"retweet\", display: \"Retweet\" }}/>\r\n                </React.Fragment> \r\n              }\r\n              {isDetail === true ? null : <button className='btn btn-outline-primary btn-sm' onClick={handleLink}>View</button>}\r\n            </div>\r\n          </div>\r\n        </div>       \r\n      </div>\r\n    );\r\n  }\r\n  ","import React, { useState, useEffect } from \"react\";\r\n\r\nimport {apiTweetFeed} from \"./lookup\";\r\n\r\nimport { Tweet } from \"./detail\";\r\n\r\nexport function FeedList(props) {\r\n    const [tweetsInit, setTweetsInit] = useState([]);\r\n    const [tweets, setTweets] = useState([]);\r\n    const [nextUrl, setNextUrl] = useState(null);\r\n    const [tweetsDidSet, setTweetsDidSet] = useState(false);\r\n    // console.log(props.newTweets)\r\n    // setTweetsInit([...props.newTweets].concat(tweetsInit)) - infinite loop\r\n  \r\n    useEffect(() => {\r\n      console.log(\"useEffect for insert new tweets - run more then one time\");\r\n      const final = [...props.newTweets].concat(tweetsInit);\r\n      if (final.length !== tweets.length) {\r\n        setTweets(final);\r\n      }\r\n    }, [props.newTweets, tweets, tweetsInit]);\r\n  \r\n    useEffect(() => {\r\n      if (tweetsDidSet === false) {\r\n        // do my lookup\r\n        const handleTweetListLookup = (response, status) => {\r\n          // console.log(response, status)\r\n          if (status === 200) {\r\n            setNextUrl(response.next)\r\n            setTweetsInit(response.results);\r\n            setTweetsDidSet(true);\r\n          } \r\n        };\r\n        // API Call\r\n        apiTweetFeed(handleTweetListLookup);\r\n      }\r\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username]);\r\n  \r\n    const handleDidRetweet = (newTweet) => {\r\n      const updateTweetsInit = [...tweetsInit]\r\n      updateTweetsInit.unshift(newTweet)\r\n      setTweetsInit(updateTweetsInit)\r\n      const updateFinalTweets = [...tweets]\r\n      updateFinalTweets.unshift(tweets)\r\n      setTweets(updateFinalTweets)\r\n    }\r\n\r\n    const handleLoadNext = (event) => {\r\n      event.preventDefault()\r\n      if (nextUrl !== null) {\r\n        const handleLoadNextResponse = (response, status) => {\r\n          if (status === 200) {\r\n            setNextUrl(response.next)\r\n            const newTweets = [...tweets].concat(response.results)\r\n            setTweetsInit(newTweets);\r\n            setTweets(newTweets)\r\n          } \r\n        }\r\n        apiTweetFeed(handleLoadNextResponse, nextUrl)\r\n      }\r\n    }\r\n  \r\n    return <React.Fragment>{ tweets.map((item, index) => {\r\n      return (\r\n        <Tweet\r\n          tweet={item}\r\n          didRetweet={handleDidRetweet}\r\n          className=\"my-5 py-5 border bg-white text-dark\"\r\n          key={`${index}-{item.id}`}\r\n        />\r\n      );\r\n    })}\r\n    { nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load next</button>}\r\n    </React.Fragment>\r\n  }","import React, { useState, useEffect } from \"react\";\r\n\r\nimport {apiTweetList} from \"./lookup\";\r\n\r\nimport { Tweet } from \"./detail\";\r\n\r\nexport function TweetsList(props) {\r\n    const [tweetsInit, setTweetsInit] = useState([]);\r\n    const [tweets, setTweets] = useState([]);\r\n    const [nextUrl, setNextUrl] = useState(null);\r\n    const [tweetsDidSet, setTweetsDidSet] = useState(false);\r\n    // console.log(props.newTweets)\r\n    // setTweetsInit([...props.newTweets].concat(tweetsInit)) - infinite loop\r\n  \r\n    useEffect(() => {\r\n      console.log(\"useEffect for insert new tweets - run more then one time\");\r\n      const final = [...props.newTweets].concat(tweetsInit);\r\n      if (final.length !== tweets.length) {\r\n        setTweets(final);\r\n      }\r\n    }, [props.newTweets, tweets, tweetsInit]);\r\n  \r\n    useEffect(() => {\r\n      if (tweetsDidSet === false) {\r\n        // do my lookup\r\n        const handleTweetListLookup = (response, status) => {\r\n          // console.log(response, status)\r\n          if (status === 200) {\r\n            setNextUrl(response.next)\r\n            setTweetsInit(response.results);\r\n            setTweetsDidSet(true);\r\n          } else {\r\n            alert(\"There was an error\");\r\n          }\r\n        };\r\n        // API Call\r\n        apiTweetList(props.username, handleTweetListLookup);\r\n      }\r\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username]);\r\n  \r\n    const handleDidRetweet = (newTweet) => {\r\n      const updateTweetsInit = [...tweetsInit]\r\n      updateTweetsInit.unshift(newTweet)\r\n      setTweetsInit(updateTweetsInit)\r\n      const updateFinalTweets = [...tweets]\r\n      updateFinalTweets.unshift(tweets)\r\n      setTweets(updateFinalTweets)\r\n    }\r\n\r\n    const handleLoadNext = (event) => {\r\n      event.preventDefault()\r\n      if (nextUrl !== null) {\r\n        const handleLoadNextResponse = (response, status) => {\r\n          if (status === 200) {\r\n            setNextUrl(response.next)\r\n            const newTweets = [...tweets].concat(response.results)\r\n            setTweetsInit(newTweets);\r\n            setTweets(newTweets)\r\n          } else {\r\n            alert(\"There was an error\");\r\n          }\r\n        }\r\n        apiTweetList(props.username, handleLoadNextResponse, nextUrl)\r\n      }\r\n    }\r\n  \r\n    return <React.Fragment>{ tweets.map((item, index) => {\r\n      return (\r\n        <Tweet\r\n          tweet={item}\r\n          didRetweet={handleDidRetweet}\r\n          className=\"my-5 py-5 border bg-white text-dark\"\r\n          key={`${index}-{item.id}`}\r\n        />\r\n      );\r\n    })}\r\n    { nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load next</button>}\r\n    </React.Fragment>\r\n  }","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { apiTweetDetail } from \"./lookup\";\r\nimport { Tweet } from \"./detail\";\r\nimport { TweetCreate } from \"./create\";\r\nimport { FeedList } from \"./feed\";\r\nimport { TweetsList } from \"./list\";\r\n\r\nexport function FeedComponent(props) {\r\n  const [newTweets, setNewTweets] = useState([]);\r\n  // console.log(canTweet === true)\r\n  const canTweet = props.canTweet === \"false\" ? false : true\r\n  const handleNewTweet = (newTweet) => {\r\n    let tempNewTweets = [...newTweets];\r\n    tempNewTweets.unshift(newTweet);\r\n    setNewTweets(tempNewTweets);\r\n  }\r\n  return (\r\n    <div className={props.className}>\r\n      {canTweet === true && <TweetCreate didTweet={handleNewTweet} className=\"col-12 mb-3\" />}\r\n      <FeedList newTweets={newTweets} {...props}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function TweetsComponent(props) {\r\n  const [newTweets, setNewTweets] = useState([]);\r\n  // console.log(canTweet === true)\r\n  const canTweet = props.canTweet === \"false\" ? false : true\r\n  const handleNewTweet = (newTweet) => {\r\n    let tempNewTweets = [...newTweets];\r\n    tempNewTweets.unshift(newTweet);\r\n    setNewTweets(tempNewTweets);\r\n  }\r\n  return (\r\n    <div className={props.className}>\r\n      {canTweet === true && <TweetCreate didTweet={handleNewTweet} className=\"col-12 mb-3\" />}\r\n      <TweetsList newTweets={newTweets} {...props}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function TweetDetailComponent(props) {\r\n  const {tweetId} = props\r\n  const [didLookup, setDidLookup] = useState(false)\r\n  const [tweet, setTweet] = useState(null)\r\n\r\n  const handleBackendLookup = (response, status) => {\r\n    if (status === 200) {\r\n      setTweet(response)\r\n    } else {\r\n      alert(\"There wan an error finding your tweet.\")\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (didLookup === false) {\r\n      apiTweetDetail(tweetId, handleBackendLookup)\r\n      setDidLookup(true)\r\n    }\r\n  }, [tweetId, didLookup, setDidLookup])\r\n\r\n  return tweet === null ? null : <Tweet tweet={tweet} className={props.className} />\r\n}","import React, {useEffect, useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport {TweetsComponent} from './tweets'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n          <TweetsComponent />\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { ProfileBadgeComponent } from './profiles';\nimport reportWebVitals from './reportWebVitals';\nimport { FeedComponent, TweetsComponent, TweetDetailComponent } from './tweets';\n\nconst appEl = document.getElementById('root')\nif (appEl) {\n  ReactDOM.render(<App />, appEl);\n}\nconst e = React.createElement\nconst tweetsEl = document.getElementById(\"tweetme-2\")\nif (tweetsEl) {\n  // console.log(tweetsEl.dataset)\n  // const MyComponent = e(TweetsComponent, tweetsEl.dataset)\n  ReactDOM.render(e(TweetsComponent, tweetsEl.dataset), tweetsEl)\n}\n\nconst tweetsFeedEl = document.getElementById(\"tweetme-2-feed\")\nif (tweetsFeedEl) {\n  // console.log(tweetsEl.dataset)\n  // const MyComponent = e(TweetsComponent, tweetsEl.dataset)\n  ReactDOM.render(e(FeedComponent, tweetsFeedEl.dataset), tweetsFeedEl)\n}\n\nconst tweetDetailElements = document.querySelectorAll(\".tweetme-2-detail\")\ntweetDetailElements.forEach(container => {\n  ReactDOM.render(e(TweetDetailComponent, container.dataset), container)\n})\n\nconst userProfileBadgeElements = document.querySelectorAll(\".tweetme-2-profile-badge\")\nuserProfileBadgeElements.forEach(container => {\n  ReactDOM.render(e(ProfileBadgeComponent, container.dataset), container)\n})\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}