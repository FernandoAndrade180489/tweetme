{"version":3,"sources":["logo.svg","lookup/components.js","tweets/buttons.js","tweets/lookup.js","tweets/create.js","tweets/detail.js","tweets/list.js","tweets/components.js","App.js","reportWebVitals.js","index.js"],"names":["backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","responseType","open","setRequestHeader","onload","status","response","detail","window","location","href","onerror","e","console","log","message","send","ActionBtn","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","handleActionBackendEvent","type","onClick","event","preventDefault","tweetId","id","apiTweetAction","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendUpdate","alert","onSubmit","newVal","current","value","content","ref","required","ParentTweet","parent","Tweet","hideActions","didRetweet","useState","actionTweet","setActionTweet","match","pathname","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","Fragment","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","tweetsDidSet","setTweetsDidSet","useEffect","final","newTweets","concat","username","apiTweetList","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index","TweetsComponent","setNewTweets","canTweet","tempNewTweets","TweetDetailComponent","didLookup","setDidLookup","setTweet","handleBackendLookup","apiTweetDetail","App","src","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","appEl","getElementById","ReactDOM","render","createElement","tweetsEl","dataset","querySelectorAll","forEach","container"],"mappings":"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","file":"static/js/main.854ca5ba.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","// FOR CSRF Token when send POST\r\n// https://docs.djangoproject.com/en/2.2/ref/csrf/\r\nfunction getCookie(name) {\r\n  var cookieValue = null;\r\n  if (document.cookie && document.cookie !== \"\") {\r\n    var cookies = document.cookie.split(\";\");\r\n    for (var i = 0; i < cookies.length; i++) {\r\n      var cookie = cookies[i].trim();\r\n      // Does this cookie string begin with the name we want?\r\n      if (cookie.substring(0, name.length + 1) === name + \"=\") {\r\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\nexport function backendLookup(method, endpoint, callback, data) {\r\n  let jsonData;\r\n  if (data) {\r\n    jsonData = JSON.stringify(data);\r\n  }\r\n  const xhr = new XMLHttpRequest(); // xhr = SomeClass() -> equivalent in Python\r\n  const url = `http://localhost:8000/api${endpoint}`;\r\n  const csrftoken = getCookie(\"csrftoken\"); // For csrf Token from function getCookie()\r\n  xhr.responseType = \"json\";\r\n  xhr.open(method, url);\r\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\");\r\n  \r\n  // console.log(csrftoken)\r\n\r\n  if (csrftoken) {\r\n  //  xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\")\r\n    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")\r\n    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken) // JWT token\r\n  }\r\n\r\n  xhr.onload = function () {\r\n    if (xhr.status === 403) {\r\n      const detail = xhr.response.detail\r\n      if (detail === \"Authentication credentials were not provided.\"){\r\n        window.location.href = \"/login?showLoginRequired=true\"\r\n      }\r\n    }\r\n    callback(xhr.response, xhr.status);\r\n  };\r\n  xhr.onerror = function (e) {\r\n    console.log(\"error\", e);\r\n    callback({ message: \"The request was an error\" }, 400);\r\n  };\r\n  console.log(jsonData)\r\n  xhr.send(jsonData);\r\n}","import React from \"react\";\r\n\r\nimport {apiTweetAction} from \"./lookup\";\r\n\r\nexport function ActionBtn(props) {\r\n    const { tweet, action, didPerformAction } = props;\r\n    const likes = tweet.likes ? tweet.likes : 0\r\n    const className = props.className ? props.className : \"btn btn-primary btn-sm\";\r\n    const actionDisplay = action.display ? action.display : \"Action\";\r\n  \r\n    const handleActionBackendEvent = (response, status) => {\r\n      // backend api response handler\r\n      console.log(response, status)\r\n      if ((status === 200 || status === 201) && didPerformAction) {\r\n        didPerformAction(response, status)\r\n      }\r\n    }\r\n  \r\n    const handleClick = (event) => {\r\n      event.preventDefault();\r\n      // backend api request\r\n      apiTweetAction(tweet.id, action.type, handleActionBackendEvent)    \r\n    };\r\n  \r\n    const display = action.type === \"like\" ? `${likes} ${actionDisplay}` : actionDisplay;\r\n    return (\r\n      <button className={className} onClick={handleClick}>\r\n        {display}\r\n      </button>\r\n    );\r\n  }","import { backendLookup } from \"../lookup\";\r\n\r\n\r\nexport function apiTweetCreate(newTweet, callback) {\r\n    backendLookup(\"POST\", \"/tweets/create/\", callback, { content: newTweet });\r\n}\r\n\r\nexport function apiTweetAction(tweetId, action, callback) {\r\n    const data = {id: tweetId, action: action}\r\n    backendLookup(\"POST\", \"/tweets/action/\", callback, data);\r\n}\r\n\r\nexport function apiTweetDetail(tweetId, callback) {\r\n    backendLookup(\"GET\", `/tweets/${tweetId}/`, callback);\r\n}\r\n\r\nexport function apiTweetList(username, callback) {\r\n    let endpoint = \"/tweets/\"\r\n    if (username) {\r\n        endpoint = `/tweets/?username=${username}`\r\n    }\r\n    backendLookup(\"GET\", endpoint, callback);\r\n}\r\n","import React from \"react\";\r\n\r\nimport { apiTweetCreate } from \"./lookup\";\r\n\r\nexport function TweetCreate(props) {\r\n  const textAreaRef = React.createRef();\r\n  const {didTweet} = props\r\n  const handleBackendUpdate = (response, status) => {\r\n    console.log(response, status)\r\n    if (status === 201) {\r\n      didTweet(response);\r\n    } else {\r\n      console.log(response);\r\n      alert(\"An error occured, please try again\");\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    // console.log(event);\r\n    const newVal = textAreaRef.current.value;\r\n    console.log('new value', newVal)\r\n    \r\n    // backend api request\r\n    apiTweetCreate(newVal, handleBackendUpdate);    \r\n    textAreaRef.current.value = \"\";\r\n  };\r\n  \r\n  return (\r\n      <div className={props.className}>\r\n        <form onSubmit={handleSubmit}>\r\n          <textarea\r\n            ref={textAreaRef}\r\n            required={true}\r\n            className=\"form-control\"\r\n          ></textarea>\r\n          <button type=\"submit\" className=\"btn btn-primary my-3\">\r\n            Tweet\r\n          </button>\r\n        </form>\r\n      </div>\r\n  );\r\n}","import React, { useState } from \"react\";\r\n\r\nimport { ActionBtn } from \"./buttons\";\r\n\r\nexport function ParentTweet(props) {\r\n    const {tweet} = props;\r\n    return (\r\n      tweet.parent ? \r\n        (<div className='row'>\r\n        <div className='col-11 mx-auto p-3 border rounded'>  \r\n          <p className='mb-0 text-muted small'>Retweet</p>\r\n          <Tweet hideActions className={' '} tweet={tweet.parent} /></div> \r\n        </div>) \r\n      : null);\r\n  }\r\n  \r\n  export function Tweet(props) {\r\n    const { tweet, didRetweet, hideActions } = props;\r\n    const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null)\r\n    const className = props.className\r\n      ? props.className\r\n      : \"col-10 mx-auto col-md-6\";\r\n    const action = { type: \"like\", display: \"Likes\" };\r\n\r\n    const path = window.location.pathname\r\n    const match = path.match(/(?<tweetid>\\d+)/)      \r\n    const urlTweetId = match ? match.groups.tweetid : -1\r\n    \r\n    const isDetail = `${tweet.id}` === `${urlTweetId}`\r\n    const handleLink = (event) => {\r\n      event.preventDefault();\r\n      window.location.href = `/${tweet.id}`\r\n    }\r\n  \r\n    const handlePerformAction = (newActionTweet, status) => {\r\n      if (status === 200) {\r\n        setActionTweet(newActionTweet)\r\n      } else if (status === 201) {\r\n        if (didRetweet) {\r\n          didRetweet(newActionTweet)\r\n        }\r\n      }\r\n    }\r\n    \r\n    \r\n    return (\r\n      <div className={className}>\r\n        <div>\r\n          <p>{tweet.id} - {tweet.content}</p>\r\n          <ParentTweet tweet={tweet} />               \r\n        </div>\r\n        <div className=\"btn btn-group\">\r\n          {(actionTweet && hideActions !== true) && <React.Fragment>\r\n              <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={action} />\r\n              <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{ type: \"unlike\", display: \"Unlike\" }}/>\r\n              <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{ type: \"retweet\", display: \"Retweet\" }}/>\r\n            </React.Fragment> \r\n          }\r\n          {isDetail === true ? null : <button className='btn btn-outline-primary btn-sm' onClick={handleLink}>View</button>}\r\n        </div>       \r\n      </div>\r\n    );\r\n  }\r\n  ","import React, { useState, useEffect } from \"react\";\r\n\r\nimport {apiTweetList} from \"./lookup\";\r\n\r\nimport { Tweet } from \"./detail\";\r\n\r\nexport function TweetsList(props) {\r\n    const [tweetsInit, setTweetsInit] = useState([]);\r\n    const [tweets, setTweets] = useState([]);\r\n    const [tweetsDidSet, setTweetsDidSet] = useState(false);\r\n    // console.log(props.newTweets)\r\n    // setTweetsInit([...props.newTweets].concat(tweetsInit)) - infinite loop\r\n  \r\n    useEffect(() => {\r\n      console.log(\"useEffect for insert new tweets - run more then one time\");\r\n      const final = [...props.newTweets].concat(tweetsInit);\r\n      if (final.length !== tweets.length) {\r\n        setTweets(final);\r\n      }\r\n    }, [props.newTweets, tweets, tweetsInit]);\r\n  \r\n    useEffect(() => {\r\n      if (tweetsDidSet === false) {\r\n        // do my lookup\r\n        const handleTweetListLookup = (response, status) => {\r\n          // console.log(response, status)\r\n          if (status === 200) {\r\n            setTweetsInit(response);\r\n            setTweetsDidSet(true);\r\n          } else {\r\n            alert(\"There was an error\");\r\n          }\r\n        };\r\n        // API Call\r\n        apiTweetList(props.username, handleTweetListLookup);\r\n      }\r\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username]);\r\n  \r\n    const handleDidRetweet = (newTweet) => {\r\n      const updateTweetsInit = [...tweetsInit]\r\n      updateTweetsInit.unshift(newTweet)\r\n      setTweetsInit(updateTweetsInit)\r\n      const updateFinalTweets = [...tweets]\r\n      updateFinalTweets.unshift(tweets)\r\n      setTweets(updateFinalTweets)\r\n    }\r\n  \r\n    return tweets.map((item, index) => {\r\n      return (\r\n        <Tweet\r\n          tweet={item}\r\n          didRetweet={handleDidRetweet}\r\n          className=\"my-5 py-5 border bg-white text-dark\"\r\n          key={`${index}-{item.id}`}\r\n        />\r\n      );\r\n    });\r\n  }","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { apiTweetDetail } from \"./lookup\";\r\nimport { Tweet } from \"./detail\";\r\nimport { TweetCreate } from \"./create\";\r\nimport { TweetsList } from \"./list\";\r\n\r\nexport function TweetsComponent(props) {\r\n  const [newTweets, setNewTweets] = useState([]);\r\n  // console.log(canTweet === true)\r\n  const canTweet = props.canTweet === \"false\" ? false : true\r\n  const handleNewTweet = (newTweet) => {\r\n    let tempNewTweets = [...newTweets];\r\n    tempNewTweets.unshift(newTweet);\r\n    setNewTweets(tempNewTweets);\r\n  }\r\n  return (\r\n    <div className={props.className}>\r\n      {canTweet === true && <TweetCreate didTweet={handleNewTweet} className=\"col-12 mb-3\" />}\r\n      <TweetsList newTweets={newTweets} {...props}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function TweetDetailComponent(props) {\r\n  const {tweetId} = props\r\n  const [didLookup, setDidLookup] = useState(false)\r\n  const [tweet, setTweet] = useState(null)\r\n\r\n  const handleBackendLookup = (response, status) => {\r\n    if (status === 200) {\r\n      setTweet(response)\r\n    } else {\r\n      alert(\"There wan an error finding your tweet.\")\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (didLookup === false) {\r\n      apiTweetDetail(tweetId, handleBackendLookup)\r\n      setDidLookup(true)\r\n    }\r\n  }, [tweetId, didLookup, setDidLookup])\r\n\r\n  return tweet === null ? null : <Tweet tweet={tweet} className={props.className} />\r\n}","import React, {useEffect, useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport {TweetsComponent} from './tweets'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n          <TweetsComponent />\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { TweetsComponent, TweetDetailComponent } from './tweets';\n\nconst appEl = document.getElementById('root')\nif (appEl) {\n  ReactDOM.render(<App />, appEl);\n}\nconst e = React.createElement\nconst tweetsEl = document.getElementById(\"tweetme-2\")\nif (tweetsEl) {\n  // console.log(tweetsEl.dataset)\n  // const MyComponent = e(TweetsComponent, tweetsEl.dataset)\n  ReactDOM.render(e(TweetsComponent, tweetsEl.dataset), tweetsEl)\n}\n\nconst tweetDetailElements = document.querySelectorAll(\".tweetme-2-detail\")\ntweetDetailElements.forEach(container => {\n  ReactDOM.render(e(TweetDetailComponent, container.dataset), container)\n})\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}